import { TxInterface, Output } from '../types';
import { EsploraTx } from './types';
/**
 * Fetch the raw transaction by txid
 * @param txId txID to fetch
 * @param url esplora URL
 */
export declare function fetchTxHex(txId: string, url: string): Promise<string>;
/**
 * Fetch the transaction as TxInterface (with prevouts)
 * @param txId transaction's hash to fetch
 * @param url the esplora URL
 */
export declare function fetchTx(txId: string, url: string): Promise<TxInterface>;
/**
 * Fetch unspents for a given address.
 * @param address
 * @param url the esplora URL
 */
export declare function fetchUtxos(address: string, url: string): Promise<Output[]>;
/**
 * Convert an esplora transaction to a TxInterface
 * @param esploraTx
 * @param explorerUrl
 */
export declare function esploraTxToTxInterface(esploraTx: EsploraTx, explorerUrl: string): Promise<TxInterface>;
/**
 * Create unblinded explorer URL from blinding data
 * @param baseURL
 * @param txID
 * @param outputsBlinder
 */
export declare function makeUnblindURL(baseURL: string, txID: string, outputsBlinder: {
    value: number;
    asset: string;
    assetBlinder: string;
    valueBlinder: string;
}[]): string;
/**
 * Create explorer URL with unblinding data
 * @param tx transaction to create the link for
 * @param baseURL base web Explorer URL
 */
export declare function getUnblindURLFromTx(tx: TxInterface, baseURL: string): string;
