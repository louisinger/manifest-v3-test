import { BlindingKeyGetterAsync, TxInterface, UnblindedOutput } from '../types';
import { ChainAPI } from './api';
import { EsploraTx, EsploraUtxo } from './types';
export declare function utxosFetchGenerator(addresses: string[], blindingKeyGetter: BlindingKeyGetterAsync, api: ChainAPI, skip?: (utxo: EsploraUtxo) => boolean): AsyncGenerator<UnblindedOutput, {
    numberOfUtxos: number;
    errors: Error[];
}, undefined>;
export declare function txsFetchGenerator(addresses: string[], blindingKeyGetter: BlindingKeyGetterAsync, api: ChainAPI, skip?: (tx: EsploraTx) => boolean): AsyncGenerator<TxInterface, {
    txIDs: string[];
    errors: Error[];
}, undefined>;
export declare function fetchAllTxs(addresses: string[], blindingKeyGetter: BlindingKeyGetterAsync, api: ChainAPI, skip?: (tx: EsploraTx) => boolean): Promise<TxInterface[]>;
export declare function fetchAllUtxos(addresses: string[], blindingKeyGetter: BlindingKeyGetterAsync, api: ChainAPI, skip?: (utxo: EsploraUtxo) => boolean): Promise<UnblindedOutput[]>;
