/// <reference types="node" />
import { bip341 } from 'liquidjs-lib';
export declare enum TypeAST {
    SCRIPT = 0,
    TREE = 1,
    HEX = 2,
    KEY = 3
}
export declare enum ScriptType {
    ELTR = "eltr",
    ASM = "asm",
    RAW = "raw"
}
export interface AST<V = any> {
    type: TypeAST;
    value: V;
    children: AST[];
}
export interface DescriptorsCompilerAPI {
    compile: (ast: AST) => TemplateResult;
}
export interface TemplateResult {
    scriptPubKey(): Buffer;
    redeemScript?(): Buffer;
    witnesses?(...args: any[]): Buffer[];
    taprootHashTree?: bip341.HashTree;
    taprootInternalKey?: string;
}
export declare const DescriptorsCompilerFactory: (ecc: bip341.TinySecp256k1Interface) => DescriptorsCompilerAPI;
